public final class com/caplin/integration/datasourcex/util/AntPatternNamespace : com/caplin/datasource/namespace/Namespace {
	public static final field Companion Lcom/caplin/integration/datasourcex/util/AntPatternNamespace$Companion;
	public fun <init> (Ljava/lang/String;)V
	public static final fun addExcludeNamespace (Lcom/caplin/datasource/Service;Lcom/caplin/integration/datasourcex/util/AntPatternNamespace;)V
	public static final fun addIncludeNamespace (Lcom/caplin/datasource/Service;Lcom/caplin/integration/datasourcex/util/AntPatternNamespace;)V
	public final fun extractPathVariables (Ljava/lang/String;)Ljava/util/Map;
	public final fun getObjectMap (Ljava/util/Map;)Lcom/caplin/integration/datasourcex/util/AntPatternNamespace$ObjectMap;
	public final fun getPathVariables ()Ljava/util/Set;
	public final fun getPattern ()Ljava/lang/String;
	public final fun getPosixExtendedPattern ()Ljava/lang/String;
	public final fun isExact ()Z
	public fun match (Ljava/lang/String;)Z
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/AntPatternNamespace$Companion {
	public final fun addExcludeNamespace (Lcom/caplin/datasource/Service;Lcom/caplin/integration/datasourcex/util/AntPatternNamespace;)V
	public final fun addIncludeNamespace (Lcom/caplin/datasource/Service;Lcom/caplin/integration/datasourcex/util/AntPatternNamespace;)V
}

public final class com/caplin/integration/datasourcex/util/AntPatternNamespace$ObjectMap {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFromPattern ()Ljava/lang/String;
	public final fun getToPattern ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/AntRegexPathMatcher {
	public static final field Companion Lcom/caplin/integration/datasourcex/util/AntRegexPathMatcher$Companion;
	public fun <init> (Lkotlin/text/Regex;Ljava/lang/String;Ljava/util/Set;Z)V
	public final fun getExact ()Z
	public final fun getPathVariables ()Ljava/util/Set;
	public final fun getPosixExtendedPattern ()Ljava/lang/String;
	public final fun getRegex ()Lkotlin/text/Regex;
	public static final fun invoke (Ljava/lang/String;)Lcom/caplin/integration/datasourcex/util/AntRegexPathMatcher;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/AntRegexPathMatcher$Companion {
	public final fun invoke (Ljava/lang/String;)Lcom/caplin/integration/datasourcex/util/AntRegexPathMatcher;
}

public final class com/caplin/integration/datasourcex/util/KLogger {
	public static final synthetic fun box-impl (Lorg/slf4j/Logger;)Lcom/caplin/integration/datasourcex/util/KLogger;
	public static fun constructor-impl (Lorg/slf4j/Logger;)Lorg/slf4j/Logger;
	public static final fun debug-impl (Lorg/slf4j/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun debug-impl (Lorg/slf4j/Logger;Lkotlin/jvm/functions/Function0;)V
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/slf4j/Logger;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/slf4j/Logger;Lorg/slf4j/Logger;)Z
	public static final fun error-impl (Lorg/slf4j/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun error-impl (Lorg/slf4j/Logger;Lkotlin/jvm/functions/Function0;)V
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/slf4j/Logger;)I
	public static final fun info-impl (Lorg/slf4j/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun info-impl (Lorg/slf4j/Logger;Lkotlin/jvm/functions/Function0;)V
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/slf4j/Logger;)Ljava/lang/String;
	public static final fun trace-impl (Lorg/slf4j/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun trace-impl (Lorg/slf4j/Logger;Lkotlin/jvm/functions/Function0;)V
	public final synthetic fun unbox-impl ()Lorg/slf4j/Logger;
	public static final fun warn-impl (Lorg/slf4j/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun warn-impl (Lorg/slf4j/Logger;Lkotlin/jvm/functions/Function0;)V
}

public final class com/caplin/integration/datasourcex/util/ReadWriteLock {
	public fun <init> ()V
	public final fun readLock (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun readUnlock (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun withReadLock (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun withWriteLock (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun writeLock (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun writeUnlock ()V
}

public final class com/caplin/integration/datasourcex/util/SerializablePersistentMapKt {
	public static final fun serializable (Lkotlinx/collections/immutable/PersistentMap;)Lkotlinx/collections/immutable/PersistentMap;
}

public final class com/caplin/integration/datasourcex/util/SerializablePersistentSetKt {
	public static final fun serializable (Lkotlinx/collections/immutable/PersistentSet;)Lkotlinx/collections/immutable/PersistentSet;
}

public abstract interface class com/caplin/integration/datasourcex/util/SimpleDataSourceConfig {
	public abstract fun getExtraConfig ()Ljava/lang/String;
	public abstract fun getLocalLabel ()Ljava/lang/String;
	public abstract fun getLogDirectory ()Ljava/nio/file/Path;
	public abstract fun getName ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Discovery : com/caplin/integration/datasourcex/util/SimpleDataSourceConfig {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getClusterName ()Ljava/lang/String;
	public fun getExtraConfig ()Ljava/lang/String;
	public final fun getHostname ()Ljava/lang/String;
	public fun getLocalLabel ()Ljava/lang/String;
	public fun getLogDirectory ()Ljava/nio/file/Path;
	public fun getName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer : com/caplin/integration/datasourcex/util/SimpleDataSourceConfig {
	public fun <init> (Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Lcom/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer$Incoming;Ljava/util/List;Ljava/util/List;Z)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Lcom/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer$Incoming;Ljava/util/List;Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDevOverride ()Z
	public fun getExtraConfig ()Ljava/lang/String;
	public final fun getIncoming ()Lcom/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer$Incoming;
	public fun getLocalLabel ()Ljava/lang/String;
	public fun getLogDirectory ()Ljava/nio/file/Path;
	public fun getName ()Ljava/lang/String;
	public final fun getOutgoing ()Ljava/util/List;
	public final fun getRequiredServices ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer$Incoming {
	public fun <init> (IZ)V
	public final fun getPort ()I
	public final fun isWebsocket ()Z
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/SimpleDataSourceConfig$Peer$Outgoing {
	public fun <init> (Ljava/lang/String;IZ)V
	public final fun getHostname ()Ljava/lang/String;
	public final fun getPort ()I
	public final fun isWebsocket ()Z
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/SimpleDatasourceFactory {
	public static final field INSTANCE Lcom/caplin/integration/datasourcex/util/SimpleDatasourceFactory;
	public static final fun createDataSource (Lcom/caplin/integration/datasourcex/util/SimpleDataSourceConfig;)Lcom/caplin/datasource/DataSource;
}

public final class com/caplin/integration/datasourcex/util/TimeoutKt {
	public static final fun withTimeout (JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withTimeout (Ljava/time/Duration;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withTimeout-KLykuaI (JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/BufferKt {
	public static final fun bufferingDebounce (Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;
	public static final fun bufferingDebounce (Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/CastKt {
	public static final fun cast (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract class com/caplin/integration/datasourcex/util/flow/CompletingSharedFlow : kotlinx/coroutines/flow/AbstractFlow {
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/CompletingSharedFlowCache {
	public static final field Companion Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlowCache$Companion;
	public abstract fun get (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlow;
}

public final class com/caplin/integration/datasourcex/util/flow/CompletingSharedFlowCache$Companion {
	public final fun invoke (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;I)Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlowCache;
}

public final class com/caplin/integration/datasourcex/util/flow/CompletingSharedFlowKt {
	public static final fun loading (Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlowCache;Lkotlin/jvm/functions/Function1;)Lcom/caplin/integration/datasourcex/util/flow/LoadingCompletingSharedFlowCache;
	public static final fun onSubscription (Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public static final fun shareInCompleting (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;I)Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlow;
	public static synthetic fun shareInCompleting$default (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;IILjava/lang/Object;)Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlow;
}

public final class com/caplin/integration/datasourcex/util/flow/DemultiplexKt {
	public static final fun demultiplexBy (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/FlatMapFirstKt {
	public static final fun flatMapFirst (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public static final fun flatMapFirst (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/FlowMap : com/caplin/integration/datasourcex/util/flow/MapFlow, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public abstract fun asMap ()Lkotlinx/collections/immutable/PersistentMap;
}

public final class com/caplin/integration/datasourcex/util/flow/FlowMapKt {
	public static final fun mutableFlowMapOf ()Lcom/caplin/integration/datasourcex/util/flow/MutableFlowMap;
	public static final fun mutableFlowMapOf ([Lkotlin/Pair;)Lcom/caplin/integration/datasourcex/util/flow/MutableFlowMap;
	public static final fun simpleToFlowMapIn (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun toFlowMapIn (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun toMutableFlowMap (Ljava/util/Map;)Lcom/caplin/integration/datasourcex/util/flow/MutableFlowMap;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/LoadingCompletingSharedFlowCache {
	public abstract fun get (Ljava/lang/Object;)Lcom/caplin/integration/datasourcex/util/flow/CompletingSharedFlow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/MapEvent : java/io/Serializable {
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent : com/caplin/integration/datasourcex/util/flow/MapEvent {
	public abstract fun component1 ()Ljava/lang/Object;
	public abstract fun component2 ()Ljava/lang/Object;
	public abstract fun component3 ()Ljava/lang/Object;
	public abstract fun getKey ()Ljava/lang/Object;
	public abstract fun getNewValue ()Ljava/lang/Object;
	public abstract fun getOldValue ()Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent$DefaultImpls {
	public static fun component1 (Lcom/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent;)Ljava/lang/Object;
	public static fun component2 (Lcom/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent;)Ljava/lang/Object;
	public static fun component3 (Lcom/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent$Removed : com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun component1 ()Ljava/lang/Object;
	public fun component2 ()Ljava/lang/Object;
	public fun component3 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKey ()Ljava/lang/Object;
	public fun getNewValue ()Ljava/lang/Object;
	public fun getOldValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent$Upsert : com/caplin/integration/datasourcex/util/flow/MapEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun component1 ()Ljava/lang/Object;
	public fun component2 ()Ljava/lang/Object;
	public fun component3 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKey ()Ljava/lang/Object;
	public fun getNewValue ()Ljava/lang/Object;
	public fun getOldValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/MapEvent$Populated : com/caplin/integration/datasourcex/util/flow/MapEvent {
	public static final field INSTANCE Lcom/caplin/integration/datasourcex/util/flow/MapEvent$Populated;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/MapEventKt {
	public static final fun conflateKeys (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun runningFoldToMapEntryEvent (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun runningFoldToMapMapEvent (Lkotlinx/coroutines/flow/Flow;Z)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun runningFoldToMapMapEvent$default (Lkotlinx/coroutines/flow/Flow;ZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/MapFlow {
	public abstract fun asFlow (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun valueFlow (Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/MapFlow$DefaultImpls {
	public static synthetic fun asFlow$default (Lcom/caplin/integration/datasourcex/util/flow/MapFlow;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/MutableCompletingSharedFlow : com/caplin/integration/datasourcex/util/flow/CompletingSharedFlow, kotlinx/coroutines/flow/FlowCollector {
	public fun <init> (IILkotlinx/coroutines/channels/BufferOverflow;)V
	public synthetic fun <init> (IILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun collectSafely (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun complete (Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun complete$default (Lcom/caplin/integration/datasourcex/util/flow/MutableCompletingSharedFlow;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun emit (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSubscriptionCount ()Lkotlinx/coroutines/flow/StateFlow;
	public final fun tryEmit (Ljava/lang/Object;)Z
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/MutableFlowMap : com/caplin/integration/datasourcex/util/flow/FlowMap {
	public abstract fun clear ()V
	public abstract fun minusAssign (Ljava/lang/Object;)V
	public abstract fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun putAll (Ljava/util/Map;)V
	public abstract fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun set (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/MutableFlowMap$DefaultImpls {
	public static fun minusAssign (Lcom/caplin/integration/datasourcex/util/flow/MutableFlowMap;Ljava/lang/Object;)V
	public static fun set (Lcom/caplin/integration/datasourcex/util/flow/MutableFlowMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/RetryKt {
	public static final fun retryWithExponentialBackoff (Lkotlinx/coroutines/flow/Flow;JJLkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun retryWithExponentialBackoff$default (Lkotlinx/coroutines/flow/Flow;JJLkotlin/jvm/functions/Function3;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/SetEvent : java/io/Serializable {
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent : com/caplin/integration/datasourcex/util/flow/SetEvent {
	public abstract fun component1 ()Ljava/lang/Object;
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent$DefaultImpls {
	public static fun component1 (Lcom/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent$Insert : com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;)V
	public fun component1 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent$Removed : com/caplin/integration/datasourcex/util/flow/SetEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;)V
	public fun component1 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SetEvent$Populated : com/caplin/integration/datasourcex/util/flow/SetEvent {
	public static final field INSTANCE Lcom/caplin/integration/datasourcex/util/flow/SetEvent$Populated;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SetEventKt {
	public static final fun flatMapLatestAndMerge (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static final fun flatMapLatestAndMergeSet (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static final fun runningFoldToSet (Lkotlinx/coroutines/flow/Flow;ZZ)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun runningFoldToSet$default (Lkotlinx/coroutines/flow/Flow;ZZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun toEvents (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/SimpleMapEvent : java/io/Serializable {
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$EntryEvent : com/caplin/integration/datasourcex/util/flow/SimpleMapEvent {
	public abstract fun getKey ()Ljava/lang/Object;
	public abstract fun getNewValue ()Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$EntryEvent$Removed : com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKey ()Ljava/lang/Object;
	public fun getNewValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$EntryEvent$Upsert : com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$EntryEvent {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKey ()Ljava/lang/Object;
	public fun getNewValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SimpleMapEvent$Populated : com/caplin/integration/datasourcex/util/flow/SimpleMapEvent {
	public static final field INSTANCE Lcom/caplin/integration/datasourcex/util/flow/SimpleMapEvent$Populated;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/SimpleMapEventKt {
	public static final fun runningFoldToMapSimpleEntryEvent (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun runningFoldToMapSimpleMapEvent (Lkotlinx/coroutines/flow/Flow;Z)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun runningFoldToMapSimpleMapEvent$default (Lkotlinx/coroutines/flow/Flow;ZILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/ThrottleKt {
	public static final fun throttleLatest (Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;
}

public final class com/caplin/integration/datasourcex/util/flow/TimeoutKt {
	public static final fun timeoutFirst (Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirst (Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrDefault (Lkotlinx/coroutines/flow/Flow;JLjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrDefault (Lkotlinx/coroutines/flow/Flow;JLkotlin/jvm/functions/Function0;)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrDefault (Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrDefault (Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;Lkotlin/jvm/functions/Function0;)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrNull (Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;
	public static final fun timeoutFirstOrNull (Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/caplin/integration/datasourcex/util/flow/ValueOrCompletion : java/io/Serializable {
	public abstract fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/ValueOrCompletion$Completion : com/caplin/integration/datasourcex/util/flow/ValueOrCompletion {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Throwable;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getThrowable ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/ValueOrCompletion$DefaultImpls {
	public static fun map (Lcom/caplin/integration/datasourcex/util/flow/ValueOrCompletion;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/caplin/integration/datasourcex/util/flow/ValueOrCompletion$Value : com/caplin/integration/datasourcex/util/flow/ValueOrCompletion {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class com/caplin/integration/datasourcex/util/flow/ValueOrCompletionKt {
	public static final fun dematerialize (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun dematerializeUnboxed (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun materialize (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun materializeUnboxed (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

